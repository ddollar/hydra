name: Build and Release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.24"

      - name: Build
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o hydra-${{ matrix.goos }}-${{ matrix.goarch }} main.go

      - name: Archive binary
        run: |
          tar -czvf hydra-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz hydra-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: ./hydra-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          asset_name: hydra-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          asset_content_type: application/gzip
